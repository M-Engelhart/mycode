#!/usr/bin/env python3
'''Tool to add, store, and display projects'''

import os
import re

directory_path = ('/home/student/mycode/week1_project/projects/')      # Set the location where project files are stored

def main():                             # Ask the user what they would like to do

    print("What would you like to do?")
    task_num =  int(input("1 - Add new project to the tracker\n2 - Check your current projects\n3 - Display projects by priority\n\n"))
    if task_num == 1:
        add_projects()
    elif task_num == 2:
        project_status()
    elif task_num == 3:
        priority_projects()
    else:
        print("Please enter 1, 2, or 3.\n")
        main()                                  # Re-runs the function until we get proper input


def add_projects():
    print('\n')
    user_input = input("Please type a name for the project: ").title()                                         # Prompts the user for the name of the file
    filename = directory_path + user_input                                                              # Adds the name to the directory path
    with open(filename ,"a") as project_file:
        nickname = input("Nickame for the project: ")
        cost = input("Cost in $: ")
        deadline = input("Deadline in days: ")
        priority = input("Priority of the project 1(lowest) - 10(highest): ")
        comments = input("Any extra coments abput this project? ")
        project_file.write(f"Nickname: {nickname}\n")                                                   # Writes user input to the file
        project_file.write(f"Cost in $: {cost}\n")
        project_file.write(f"Deadline in days: {deadline}\n")
        project_file.write(f"Priority of the project 1(lowest) - 10(highest): {priority}\n")
        project_file.write(f"Extra comments: {comments}\n")
    


def project_status():
    print('\n')
    print(os.listdir(directory_path))                                                           # Shows filenames for all projects
    user_input = input("Which project would you like to check on? ").title()                           # and asks the user to type in a filename
    filename = '/home/student/mycode/week1_project/projects/' + user_input
    with open(filename, "r") as project_file:
        print('\n')
        for line in project_file:
            print(line, end="")
    

def priority_projects():
    print('\n')
    project_list = os.listdir(directory_path)                                 # Opens the directory with all the projects(files)

    file_info_list = []

    for file_name in project_list:
        file_path = os.path.join(directory_path, file_name)

        if os.path.isfile(file_path):
            with open(file_path, "r") as file:
                for line in file:
                    if "Priority" in line:
                        priority_match = re.search(r':\s*([1-9|10])', line)   # regex search to find a number after ":" that is "1-9" or "10" ("1-10" would not work)
                        if priority_match:
                            priority = priority_match.group()
                            print(f'Project: {file_name}, has a priority of: {priority}')
#                            sortedProj = sorted( Proj, key =lambda x: x.get('priority') )
#                            print(sortedProj)

if __name__ == "__main__":
    main() 












'''                      if priority_match:
                            priority = int(priority_match.group(1))
                            file_info_list.append({"filename": file_name, "priority": priority})

        # Sort the file information list by priority (highest to lowest)
        file_info_list.sort(key=lambda x: x["priority"], reverse=True)

        # Print the sorted file information
        for file_info in file_info_list:
            print(f'Project: {file_info["filename"]}, has a priority of: {file_info["priority"]}')
'''

    # apimoveS = sorted(apimoves, key =lambda x: x.get('move').get('name'))
    # sortedProj = sorted( Proj, key =lambda x: x.get('priority') )